From 916a159bb2311f8d7ebce4482f271094a0dad39b Mon Sep 17 00:00:00 2001
From: Daniel Borkmann <dborkman@redhat.com>
Date: Tue, 22 Jan 2013 10:38:06 +0100
Subject: [PATCH 29/53] test_1_to_1_sendmsg: remove set-only iov variable with
 malloced buffers
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes:

  test_1_to_1_sendmsg.c: In function ‘main’:
  test_1_to_1_sendmsg.c:79:22: warning: variable ‘iov’ set but not used [-Wunused-but-set-variable]

Then, we also do not need allocated 'buffer' and 'buffer_snd' anymore.

$ ./test_1_to_1_sendmsg
test_1_to_1_sendmsg.c  1 PASS : sendmsg() with a bad socket descriptor - EBADF
test_1_to_1_sendmsg.c  2 PASS : sendmsg() with invalid socket - ENOTSOCK
test_1_to_1_sendmsg.c  3 PASS : sendmsg() on a listening socket - EPIPE
test_1_to_1_sendmsg.c  4 PASS : sendmsg() with invalid iovec ptr - EFAULT
test_1_to_1_sendmsg.c  5 PASS : sendmsg() with invalid iovec length - EINVAL
test_1_to_1_sendmsg.c  6 PASS : sendmsg() with invalid msghdr ptr - EFAULT
test_1_to_1_sendmsg.c  7 PASS : sendmsg() with invalid sinfo flags - EINVAL
test_1_to_1_sendmsg.c  8 PASS : sendmsg() with SCTP_EOF flag - EINVAL
test_1_to_1_sendmsg.c  9 PASS : sendmsg() with SCTP_ABORT flag - EINVAL
test_1_to_1_sendmsg.c 10 PASS : sendmsg() on a closed association - EPIPE
test_1_to_1_sendmsg.c 11 PASS : sendmsg() from accept socket to client - SUCCESS
test_1_to_1_sendmsg.c 12 PASS : sendmsg() from client to server - SUCCESS
test_1_to_1_sendmsg.c 13 PASS : sendmsg() from unconnected clt to server - SUCCESS
test_1_to_1_sendmsg.c 14 PASS : sendmsg() on a SHUT_RD socket - SUCCESS

Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
---
 src/func_tests/test_1_to_1_sendmsg.c | 13 -------------
 1 file changed, 13 deletions(-)

diff --git a/src/func_tests/test_1_to_1_sendmsg.c b/src/func_tests/test_1_to_1_sendmsg.c
index 7840ef3..7ac0b54 100644
--- a/src/func_tests/test_1_to_1_sendmsg.c
+++ b/src/func_tests/test_1_to_1_sendmsg.c
@@ -76,15 +76,12 @@ main(int argc, char *argv[])
 	int sk,sk1,pf_class,lstn_sk,acpt_sk,acpt1_sk, flag;
 	struct msghdr outmessage;
         char *message = "hello, world!\n";
-        struct iovec iov;
 	struct sctp_sndrcvinfo *sinfo;
         int count;
 	char outcmsg[CMSG_SPACE(sizeof(struct sctp_sndrcvinfo))];
 	struct cmsghdr *cmsg;
         struct iovec out_iov;
-        char * buffer;
 	struct msghdr inmessage;
-        char * buffer_snd;
 	char * buffer_rcv;
         struct sockaddr_in conn_addr,lstn_addr,svr_addr;
         struct iovec iov_rcv;
@@ -125,8 +122,6 @@ main(int argc, char *argv[])
 	acpt_sk = test_accept(lstn_sk, (struct sockaddr *)&svr_addr, &len);
 
 	memset(&outmessage, 0, sizeof(outmessage));
-        buffer = malloc(REALLY_BIG);
-
         outmessage.msg_name = &conn_addr;
         outmessage.msg_namelen = sizeof(conn_addr);
         outmessage.msg_iov = &out_iov;
@@ -143,10 +138,7 @@ main(int argc, char *argv[])
 	sinfo = (struct sctp_sndrcvinfo *)CMSG_DATA(cmsg);
         memset(sinfo, 0x00, sizeof(struct sctp_sndrcvinfo));
 
-	iov.iov_base = buffer;
-        iov.iov_len = REALLY_BIG;
         outmessage.msg_iov->iov_base = message;
-
         outmessage.msg_iov->iov_len = strlen(message) + 1;
 
 	flag = MSG_NOSIGNAL;
@@ -279,8 +271,6 @@ main(int argc, char *argv[])
 	acpt_sk = test_accept(lstn_sk, (struct sockaddr *)&svr_addr, &len);
 
 	memset(&outmessage, 0, sizeof(outmessage));
-        buffer_snd = malloc(REALLY_BIG);
-
         outmessage.msg_name = &svr_addr;
         outmessage.msg_namelen = sizeof(svr_addr);
         outmessage.msg_iov = &out_iov;
@@ -297,10 +287,7 @@ main(int argc, char *argv[])
 	sinfo = (struct sctp_sndrcvinfo *)CMSG_DATA(cmsg);
         memset(sinfo, 0x00, sizeof(struct sctp_sndrcvinfo));
 
-	iov.iov_base = buffer_snd;
-        iov.iov_len = REALLY_BIG;
         outmessage.msg_iov->iov_base = message;
-
         outmessage.msg_iov->iov_len = strlen(message) + 1;
 
 	memset(&inmessage, 0, sizeof(inmessage));
-- 
1.7.11.7

