From 6d02e67dad7cfdab43bc046a66b56ca8c7d11e6f Mon Sep 17 00:00:00 2001
From: Daniel Borkmann <dborkman@redhat.com>
Date: Tue, 22 Jan 2013 10:55:18 +0100
Subject: [PATCH 31/53] test_1_to_1_addrs: remove unused socket, iov and
 malloced buffer
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes:

  test_1_to_1_addrs.c: In function ‘main’:
  test_1_to_1_addrs.c:86:22: warning: variable ‘iov’ set but not used [-Wunused-but-set-variable]
  test_1_to_1_addrs.c:82:6: warning: variable ‘sk’ set but not used [-Wunused-but-set-variable]

$ ./test_1_to_1_addrs
test_1_to_1_addrs.c  1 PASS : sctp_getladdrs() with a bad socket descriptor - EBADF
test_1_to_1_addrs.c  2 PASS : sctp_getladdrs() with invalid socket - ENOTSOCK
test_1_to_1_addrs.c  3 PASS : sctp_getladdrs() with socket of different protocol - EOPNOTSUPP
test_1_to_1_addrs.c  4 PASS : sctp_getladdrs() - SUCCESS
test_1_to_1_addrs.c  5 PASS : sctp_freeladdrs() - SUCCESS
test_1_to_1_addrs.c  6 PASS : sctp_getpaddrs() with a bad socket descriptor - EBADF
test_1_to_1_addrs.c  7 PASS : sctp_getpaddrs() with invalid socket - ENOTSOCK
test_1_to_1_addrs.c  8 PASS : sctp_getpaddrs() with socket of different protocol - EOPNOTSUPP
test_1_to_1_addrs.c  9 PASS : sctp_getpaddrs() - SUCCESS
test_1_to_1_addrs.c 10 PASS : sctp_freepaddrs() - SUCCESS

Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
---
 src/func_tests/test_1_to_1_addrs.c | 12 ++----------
 1 file changed, 2 insertions(+), 10 deletions(-)

diff --git a/src/func_tests/test_1_to_1_addrs.c b/src/func_tests/test_1_to_1_addrs.c
index 4a16e80..40eed7f 100644
--- a/src/func_tests/test_1_to_1_addrs.c
+++ b/src/func_tests/test_1_to_1_addrs.c
@@ -79,18 +79,16 @@ main(int argc, char *argv[])
 {
         int error;
 	socklen_t len;
-	int sk,lstn_sk,clnt_sk,acpt_sk,pf_class,sk1;
+	int lstn_sk,clnt_sk,acpt_sk,pf_class,sk1;
 	struct msghdr outmessage;
         struct msghdr inmessage;
         char *message = "hello, world!\n";
-        struct iovec iov;
         struct iovec iov_rcv;
         struct sctp_sndrcvinfo *sinfo;
         int msg_count;
         char outcmsg[CMSG_SPACE(sizeof(struct sctp_sndrcvinfo))];
         struct cmsghdr *cmsg;
         struct iovec out_iov;
-        char * buffer_snd;
         char * buffer_rcv;
 	char incmsg[CMSG_SPACE(sizeof(sctp_cmsg_data_t))];
 	struct sockaddr *laddrs, *paddrs;
@@ -106,8 +104,6 @@ main(int argc, char *argv[])
 
         pf_class = PF_INET;
 
-        sk = test_socket(pf_class, SOCK_STREAM, IPPROTO_SCTP);
-
 	/*Creating a regular socket*/
 	clnt_sk = test_socket(pf_class, SOCK_STREAM, IPPROTO_SCTP);
 
@@ -147,8 +143,6 @@ main(int argc, char *argv[])
         msg_count = strlen(message) + 1;
 
 	memset(&outmessage, 0, sizeof(outmessage));
-        buffer_snd = malloc(REALLY_BIG);
-
         outmessage.msg_name = &lstn_addr;
         outmessage.msg_namelen = sizeof(lstn_addr);
         outmessage.msg_iov = &out_iov;
@@ -165,11 +159,9 @@ main(int argc, char *argv[])
         sinfo = (struct sctp_sndrcvinfo *)CMSG_DATA(cmsg);
         memset(sinfo, 0x00, sizeof(struct sctp_sndrcvinfo));
 
-        iov.iov_base = buffer_snd;
-	iov.iov_len = REALLY_BIG;
         outmessage.msg_iov->iov_base = message;
-
         outmessage.msg_iov->iov_len = msg_count;
+
 	test_sendmsg(clnt_sk, &outmessage, MSG_NOSIGNAL, msg_count);
 
 	test_recvmsg(acpt_sk, &inmessage, MSG_NOSIGNAL);
-- 
1.7.11.7

